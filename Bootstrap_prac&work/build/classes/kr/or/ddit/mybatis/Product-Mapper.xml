<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Pds-Mapper">
	
	<sql id="search">
		<if test="searchType == 't'.toString()">
			and pname like '%'||#{keyword}||'%'			
		</if>
		<if test="searchType == 'w'.toString()">
			and writer like '%'||#{keyword}||'%'			
		</if>
		<if test="searchType == 'c'.toString()">
			and content like '%'||#{keyword}||'%'			
		</if>
		<if test="searchType == 'tc'.toString()">
			and (
			pname like '%'||#{keyword}||'%'
			or
			content like '%'||#{keyword}||'%'						
			)			
		</if>
		<if test="searchType == 'cw'.toString()">
			and (
			writer like '%'||#{keyword}||'%'
			or
			content like '%'||#{keyword}||'%'						
			)			
		</if>
		<if test="searchType == 'tcw'.toString()">
			and (
			pname like '%'||#{keyword}||'%'
			or
			writer like '%'||#{keyword}||'%'
			or
			content like '%'||#{keyword}||'%'						
			)			
		</if>
	</sql>
	<select id="selectSearchPdsList" resultType="product">
		select
		* 
		from product
		where pno is not null
		<include refid="search" />
		order by regdate desc
	</select>
	<select id="selectRiceList" resultType="product">
		select
		* 
		from product
		where pname like '%'||'볶음밥'||'%'
		order by regdate asc
	</select>
	<select id="selectSaladList" resultType="product">
		select
		* 
		from product
		where pname like '%'||'샐러드'||'%'
		order by regdate desc
	</select>
	<select id="selectSearchPdsListCount" resultType="int">
		select
		count(*) 
		from product
		where pno is not null
		<include refid="search" />
		order by regdate desc
		
	</select>
	<select id="selectPdsByPno" parameterType="int" resultType="product">
		select 
		* 
		from product
		where pno=#{pno}
	</select>
	
	<select id="selectPdsSequenceNextValue" resultType="int">
		select pno_seq.nextVal
		from dual
	</select>
 	<update id="increaseViewCount" parameterType="int">
		update product
		set viewcnt=viewcnt+1
		where pno=#{pno}
	</update>
	
	<update id="insertPds" parameterType="product">
		insert into 
		product(pno,pname,price,writer,content)
		values(#{pno},#{pname},#{price},#{writer},#{content})
	</update>	
	
		
	<update id="updatePds" parameterType="product">
		update product 
		set 
		pname=#{pname},content=#{content}, price=#{price}		
		where pno=#{pno}
	</update>
	
	<update id="deletePds" parameterType="int" >
		delete 
		from product 
		where pno=#{pno}		
	</update>
</mapper>








